{"reason":"compiler-message","package_id":"path+file://wsl.localhost/Ubuntu/home/dragon/cat-clone#0.1.0","manifest_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cat-clone","src_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\src\\main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected `;`, found keyword `use`","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4,"is_primary":false,"text":[{"text":"use std::env;","highlight_start":1,"highlight_end":4}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":35,"byte_end":35,"line_start":1,"line_end":1,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize}","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `;` here","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":35,"byte_end":35,"line_start":1,"line_end":1,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize}","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected `;`, found keyword `use`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:1:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde::{Deserialize, Serialize}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: add `;` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::env;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected token\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file://wsl.localhost/Ubuntu/home/dragon/cat-clone#0.1.0","manifest_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cat-clone","src_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\src\\main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected `;`, found keyword `use`","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4,"is_primary":false,"text":[{"text":"use std::env;","highlight_start":1,"highlight_end":4}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":35,"byte_end":35,"line_start":1,"line_end":1,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize}","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `;` here","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":35,"byte_end":35,"line_start":1,"line_end":1,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize}","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected `;`, found keyword `use`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:1:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde::{Deserialize, Serialize}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: add `;` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::env;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected token\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file://wsl.localhost/Ubuntu/home/dragon/cat-clone#0.1.0","manifest_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cat-clone","src_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\src\\main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected one of `.`, `?`, `{`, or an operator, found keyword `let`","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":441,"byte_end":441,"line_start":22,"line_end":22,"column_start":18,"column_end":18,"is_primary":false,"text":[{"text":"    match args[1]","highlight_start":18,"highlight_end":18}],"label":"expected one of `.`, `?`, `{`, or an operator","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":447,"byte_end":450,"line_start":24,"line_end":24,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    let file_name = args.get(1).unwrap_or(&binding);","highlight_start":5,"highlight_end":8}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":428,"byte_end":433,"line_start":22,"line_end":22,"column_start":5,"column_end":10,"is_primary":false,"text":[{"text":"    match args[1]","highlight_start":5,"highlight_end":10}],"label":"while parsing this `match` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `.`, `?`, `{`, or an operator, found keyword `let`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match args[1]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected one of `.`, `?`, `{`, or an operator\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwhile parsing this `match` expression\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let file_name = args.get(1).unwrap_or(&binding);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected token\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file://wsl.localhost/Ubuntu/home/dragon/cat-clone#0.1.0","manifest_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cat-clone","src_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\src\\main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected one of `.`, `?`, `{`, or an operator, found keyword `let`","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":441,"byte_end":441,"line_start":22,"line_end":22,"column_start":18,"column_end":18,"is_primary":false,"text":[{"text":"    match args[1]","highlight_start":18,"highlight_end":18}],"label":"expected one of `.`, `?`, `{`, or an operator","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":447,"byte_end":450,"line_start":24,"line_end":24,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    let file_name = args.get(1).unwrap_or(&binding);","highlight_start":5,"highlight_end":8}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":428,"byte_end":433,"line_start":22,"line_end":22,"column_start":5,"column_end":10,"is_primary":false,"text":[{"text":"    match args[1]","highlight_start":5,"highlight_end":10}],"label":"while parsing this `match` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `.`, `?`, `{`, or an operator, found keyword `let`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match args[1]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected one of `.`, `?`, `{`, or an operator\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwhile parsing this `match` expression\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let file_name = args.get(1).unwrap_or(&binding);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected token\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file://wsl.localhost/Ubuntu/home/dragon/cat-clone#0.1.0","manifest_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cat-clone","src_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\src\\main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"incremental compilation: could not create session directory lock file: Incorrect function. (os error -2147024895)","code":null,"level":"error","spans":[],"children":[{"message":"incremental compilation can be disabled by setting the environment variable CARGO_INCREMENTAL=0 (see https://doc.rust-lang.org/cargo/reference/profiles.html#incremental)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the entire build directory can be changed to a different filesystem by setting the environment variable CARGO_TARGET_DIR to a different path (see https://doc.rust-lang.org/cargo/reference/config.html#buildtarget-dir)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: incremental compilation: could not create session directory lock file: Incorrect function. (os error -2147024895)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: incremental compilation can be disabled by setting the environment variable CARGO_INCREMENTAL=0 (see https://doc.rust-lang.org/cargo/reference/profiles.html#incremental)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the entire build directory can be changed to a different filesystem by setting the environment variable CARGO_TARGET_DIR to a different path (see https://doc.rust-lang.org/cargo/reference/config.html#buildtarget-dir)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file://wsl.localhost/Ubuntu/home/dragon/cat-clone#0.1.0","manifest_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cat-clone","src_path":"\\\\wsl.localhost\\Ubuntu\\home\\dragon\\cat-clone\\src\\main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"incremental compilation: could not create session directory lock file: Incorrect function. (os error -2147024895)","code":null,"level":"error","spans":[],"children":[{"message":"incremental compilation can be disabled by setting the environment variable CARGO_INCREMENTAL=0 (see https://doc.rust-lang.org/cargo/reference/profiles.html#incremental)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the entire build directory can be changed to a different filesystem by setting the environment variable CARGO_TARGET_DIR to a different path (see https://doc.rust-lang.org/cargo/reference/config.html#buildtarget-dir)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: incremental compilation: could not create session directory lock file: Incorrect function. (os error -2147024895)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: incremental compilation can be disabled by setting the environment variable CARGO_INCREMENTAL=0 (see https://doc.rust-lang.org/cargo/reference/profiles.html#incremental)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the entire build directory can be changed to a different filesystem by setting the environment variable CARGO_TARGET_DIR to a different path (see https://doc.rust-lang.org/cargo/reference/config.html#buildtarget-dir)\u001b[0m\n\n"}}
{"reason":"build-finished","success":false}
